const g=(r,t,e)=>r<t?t:r>e?e:r,u=r=>r<0?0:r,y=(r,t)=>{let e=0;for(let s=0;s<r.length;s++)e+=t(r[s]);return e},d=(r,t)=>r.length===1?t(r[0]):y(r,t)/r.length,m=r=>{let t;const e=()=>(t=void 0,r());return[()=>t??=requestAnimationFrame(e),()=>t!==void 0&&(cancelAnimationFrame(t),t=void 0)]};class E extends HTMLElement{static observedAttributes=["scale","min-scale","max-scale","offset-x","offset-y"];#i=1;get scale(){return this.#i}set scale(t){t=g(t,this.#t,this.#e),this.#i!==t&&(this.#o("scale",this.#i=t),this.#r.style.transform=`scale(${t})`)}#t=.1;get minScale(){return this.#t}set minScale(t){this.#t!==t&&t>0&&(this.#o("min-scale",this.#t=t),this.#i<t&&(this.scale=t))}#e=100;get maxScale(){return this.#e}set maxScale(t){this.#e!==t&&t>0&&(this.#o("max-scale",this.#e=t),this.#i>t&&(this.scale=t))}#n=0;get offsetX(){return this.#n}set offsetX(t){this.setOffset(t,this.#s)}#s=0;get offsetY(){return this.#s}set offsetY(t){this.setOffset(this.#n,t)}#c=0;#f=0;#h;#a;#r;#d;constructor(){super();const t=this.attachShadow({mode:"open"});t.innerHTML="<div part=container><div part=top-left></div><slot part=content></slot></div>",this.#h=t.firstElementChild,this.#a=this.#h.firstElementChild,this.#r=this.#a.nextElementSibling;{let e=1;const[s]=m(()=>e=1);this.#d=()=>{s(),e=0},this.addEventListener("scroll",()=>{if(e){const i=this.#p()[0].transformPoint({x:this.#c-this.scrollLeft,y:this.#f-this.scrollTop});this.#o("offset-x",this.#n=i.x),this.#o("offset-y",this.#s=i.y)}})}}#l=1;#o(t,e){this.#l=0,this.setAttribute(t,e),this.#l=1}attributeChangedCallback(t,e,s){this.#l&&e!==s&&(this[t.replace(/-([a-z])/g,(i,o)=>o.toUpperCase())]=+s)}connectedCallback(){this.#o("scale",this.#i),this.#o("min-scale",this.#t),this.#o("max-scale",this.#e)}#u="";#m=[new DOMMatrixReadOnly,new DOMMatrixReadOnly];#p(){let t="";for(let e=this;e;e=e.parentElement){const s=getComputedStyle(e).transform;s&&s!=="none"&&(t=`${s} ${t}`)}if(this.#u!==t){const e=new DOMMatrix(t);e.e=e.f=0,this.#u=t,this.#m=[DOMMatrixReadOnly.fromMatrix(e),DOMMatrixReadOnly.fromMatrix(e.inverse())]}return this.#m}setOffset(t,e){if(this.#n===t&&this.#s===e)return;this.#o("offset-x",this.#n=t),this.#o("offset-y",this.#s=e);const{x:s,y:i}=this.#p()[1].transformPoint({x:t,y:e}),o=this.#h.style;o.margin=`${this.#f=u(i)}px 0 0 ${this.#c=u(s)}px`,o.width=`${s<0?this.clientWidth-s:0}px`,o.height=`${i<0?this.clientHeight-i:0}px`,this.#d(),this.scrollTo(u(-s),u(-i))}_zoom(t,e,s){const i=this.#i,o=g(i*t,this.#t,this.#e);if(o!==i){const h=o/i-1,a=this.#a.getBoundingClientRect();this.scale=o,this.setOffset(this.#n+h*(a.x-e),this.#s+h*(a.y-s))}}zoom(t,e){const s=this.getBoundingClientRect(),i=e?.x,o=e?.y;this._zoom(t,s.x+(i===void 0?s.width*.5:typeof i=="number"?i:s.width*parseFloat(i)*.01),s.y+(o===void 0?s.height*.5:typeof o=="number"?o:s.height*parseFloat(o)*.01))}fit(t){const{offsetWidth:e,offsetHeight:s}=this,{offsetWidth:i,offsetHeight:o}=this.#r,h=t?.marginX??0,a=t?.marginY??0,c=(e-h-h)/i,n=(s-a-a)/o;c<n?(this.scale=c,this.setOffset(h,Math.floor(s-o*c)/2)):(this.scale=n,this.setOffset(Math.floor(e-i*n)/2,a))}fitX(t){const e=t?.margin??0;this.scale=(this.offsetWidth-e-e)/this.#r.offsetWidth,this.offsetX=e}fitY(t){const e=t?.margin??0;this.scale=(this.offsetHeight-e-e)/this.#r.offsetHeight,this.offsetY=e}}const b=r=>r.preventDefault(),v={passive:!1},x=typeof ontouchend<"u";class T extends E{static observedAttributes=[...super.observedAttributes,"pan-x","pan-y","pan-button","pinch-zoom"];#i(t,e,s,i){s=!!s,e!==s&&(i(s),s?this.setAttribute(t,""):this.removeAttribute(t))}#t=!1;get panX(){return this.#t}set panX(t){this.#i("pan-x",this.#t,t,e=>this.#t=e)}#e=!1;get panY(){return this.#e}set panY(t){this.#i("pan-y",this.#e,t,e=>this.#e=e)}#n=0;get panButton(){return this.#n}set panButton(t){this.#n!==t&&(this.setAttribute("pan-button",this.#n=t),t===2?this.addEventListener("contextmenu",b):this.removeEventListener("contextmenu",b))}#s=!1;get pinchZoom(){return this.#s}set pinchZoom(t){this.#i("pinch-zoom",this.#s,t,e=>this.#s=e)}attributeChangedCallback(t,e,s){t==="pan-x"?this.panX=s!==null:t==="pan-y"?this.panY=s!==null:t==="pan-button"?this.panButton=+s||0:t==="pinch-zoom"?this.pinchZoom=s!==null:super.attributeChangedCallback(t,e,s)}constructor(){if(super(),x){let t={x:0,y:0,d:0},e=[],s;const[i,o]=m(()=>{const n=d(e,f=>f.x),l=d(e,f=>f.y),p=t.d&&d(e,f=>f.d);p&&this.#s&&this._zoom(p/t.d,n,l),this.setOffset(this.#t||s?this.offsetX+n-t.x:this.offsetX,this.#e||s?this.offsetY+l-t.y:this.offsetY),e=[],t={x:n,y:l,d:p}}),h=({touches:n})=>({x:d(n,l=>l.clientX),y:d(n,l=>l.clientY),d:n.length>1?Math.hypot(n[0].clientX-n[1].clientX,n[0].clientY-n[1].clientY):0}),a=n=>{o(),e=[];const l=n.touches.length;s=this.#s&&l>1,l&&(t=h(n))},c=n=>{(n.touches.length===1?this.#t||this.#e:this.#s)&&(n.preventDefault(),e.push(h(n)),i())};this.addEventListener("touchstart",a),this.addEventListener("touchend",a),this.addEventListener("touchmove",c,v)}else{{let t=1,e,s;const[i]=m(()=>{this._zoom(t,e,s),t=1});this.addEventListener("wheel",o=>{this.#s&&o.ctrlKey&&(o.preventDefault(),t*=.99**o.deltaY,{clientX:e,clientY:s}=o,i())},v)}{let t,e,s,i;const[o]=m(()=>{this.setOffset(this.#t?this.offsetX+s-t:this.offsetX,this.#e?this.offsetY+i-e:this.offsetY),t=s,e=i}),h=n=>{n.preventDefault(),{clientX:s,clientY:i}=n,o()},a=n=>{(this.#t||this.#e)&&n.button===this.#n&&({clientX:t,clientY:e}=n,this.setPointerCapture(n.pointerId),this.addEventListener("pointermove",h))},c=()=>this.removeEventListener("pointermove",h);this.addEventListener("pointerdown",a),this.addEventListener("pointerup",c),this.addEventListener("pointercancel",c)}}}}customElements.define("gesture-frame",T);export{T as GestureFrame};
